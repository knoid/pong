{"version":3,"sources":["webpack:///./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","webpack:///./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js"],"names":["shimGetUserMedia","window","navigator","origGetUserMedia","mediaDevices","getUserMedia","bind","c","catch","e","Promise","reject","name","PermissionDeniedError","message","constraint","this","shimError_","shimGetDisplayMedia","getDisplayMedia","shimPeerConnection","browserDetails","utils","RTCIceGatherer","RTCIceCandidate","args","RTCSessionDescription","version","origMSTEnabled","Object","getOwnPropertyDescriptor","MediaStreamTrack","prototype","defineProperty","value","set","call","ev","Event","enabled","dispatchEvent","RTCRtpSender","undefined","_dtmf","track","kind","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","RTCPeerConnection","config","iceServers","edgeVersion","hasTurn","JSON","parse","stringify","filter","server","urls","url","isString","indexOf","validTurn","startsWith","includes","length","filterIceServers","shimReplaceTrack","replaceTrack","setTrack","SDPUtils","writeMediaSection","transceiver","caps","type","stream","dtlsRole","sdp","writeRtpDescription","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","mid","rtpSender","rtpReceiver","trackId","_initialTrackId","id","msid","sendEncodingParameters","ssrc","rtx","localCName","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","codecs","headerExtensions","fecMechanisms","findCodecByPayloadType","pt","parseInt","i","payloadType","preferredPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","parameters","apt","rCodec","toLowerCase","forEach","clockRate","numChannels","Math","min","push","rtcpFeedback","fb","j","parameter","lHeaderExtension","rHeaderExtension","uri","isActionAllowedInSignalingState","action","signalingState","offer","setLocalDescription","setRemoteDescription","answer","maybeAddCandidate","iceTransport","candidate","alreadyAdded","getRemoteCandidates","find","remoteCandidate","foundation","ip","port","priority","protocol","addRemoteCandidate","makeError","description","Error","code","NotSupportedError","InvalidStateError","InvalidAccessError","TypeError","OperationError","module","exports","addTrackToStreamAndFireEvent","addTrack","MediaStreamTrackEvent","fireAddTrack","pc","receiver","streams","trackEvent","setTimeout","_dispatchEvent","_eventTarget","document","createDocumentFragment","method","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","console","warn","_iceGatherers","iceCandidatePoolSize","gatherPolicy","_config","transceivers","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","configurable","get","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","event","_emitGatheringStateChange","getConfiguration","getLocalStreams","getRemoteStreams","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","s","_maybeFireNegotiationNeeded","addStream","getTracks","clonedStream","clone","idx","clonedTrack","addEventListener","removeTrack","sender","t","stop","map","splice","removeStream","getSenders","getReceivers","_createIceGatherer","sdpMLineIndex","shift","writable","bufferedCandidateEvents","bufferCandidates","end","keys","state","_gather","onlocalcandidate","removeEventListener","evt","sdpMid","cand","component","ufrag","usernameFragment","serializedCandidate","writeCandidate","assign","parseCandidate","toJSON","sections","getMediaSections","getDescription","join","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","send","recv","params","encodings","rtcp","cname","compound","rtcpParameters","p","receive","sessionpart","splitSections","mediaSection","parseRtpParameters","isIceLite","matchPrefix","isRejected","rejected","remoteIceParameters","getIceParameters","remoteDtlsParameters","getDtlsParameters","role","start","_updateSignalingState","resolve","receiverList","iceOptions","substr","split","lines","splitLines","getKind","direction","getDirection","remoteMsid","parseMsid","getMid","generateIdentifier","parseRtpEncodingParameters","parseRtcpParameters","isComplete","cands","setTransport","setRemoteCandidates","MediaStream","default","RTCRtpReceiver","getCapabilities","codec","isNewTrack","nativeTrack","removeTrackFromStreamAndFireEvent","sid","item","close","newState","states","closed","checking","connected","completed","disconnected","failed","new","connecting","createOffer","numAudioTracks","numVideoTracks","offerOptions","arguments","mandatory","optional","offerToReceiveAudio","offerToReceiveVideo","writeSessionBoilerplate","remoteCodec","hdrExt","rHdrExt","getLocalCandidates","desc","createAnswer","mediaSectionsInOffer","localTrack","getAudioTracks","getVideoTracks","reducedSize","addIceCandidate","candidateString","trim","getStats","selector","senderOrReceiver","promises","all","then","allStats","results","Map","stats","stat","ortcObjectName","obj","nativeGetstats","apply","nativeStats","mapStats","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","methods","nativeMethod","error"],"mappings":"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","file":"vendors~webrtc-adapter.edge.2e5b026d320b343f9b51.js","sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n"],"sourceRoot":""}
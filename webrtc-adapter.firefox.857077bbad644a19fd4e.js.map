{"version":3,"sources":["webpack:///./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js"],"names":["shimGetUserMedia","window","browserDetails","utils","navigator","MediaStreamTrack","getUserMedia","constraints","onSuccess","onError","mediaDevices","then","version","getSupportedConstraints","remap","obj","a","b","nativeGetUserMedia","bind","c","audio","JSON","parse","stringify","prototype","getSettings","nativeGetSettings","apply","this","arguments","applyConstraints","nativeApplyConstraints","kind","shimGetDisplayMedia","preferredMediaSource","getDisplayMedia","video","err","DOMException","name","code","Promise","reject","mediaSource","shimOnTrack","RTCTrackEvent","Object","defineProperty","receiver","shimPeerConnection","RTCPeerConnection","mozRTCPeerConnection","forEach","method","nativeMethod","methodObj","RTCIceCandidate","RTCSessionDescription","nativeAddIceCandidate","addIceCandidate","candidate","resolve","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","nativeGetStats","getStats","selector","onSucc","onErr","stats","stat","type","e","i","set","assign","shimSenderGetStats","RTCRtpSender","origGetSenders","getSenders","senders","sender","_pc","origAddTrack","addTrack","track","Map","shimReceiverGetStats","RTCRtpReceiver","origGetReceivers","getReceivers","receivers","srcElement","shimRemoveStream","removeStream","stream","getTracks","includes","removeTrack","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","origAddTransceiver","addTransceiver","setParametersPromises","initParameters","shouldPerformCheck","sendEncodings","encodingParam","test","rid","TypeError","parseFloat","scaleResolutionDownBy","RangeError","maxFramerate","transceiver","params","getParameters","encodings","push","setParameters","catch","shimCreateOffer","origCreateOffer","createOffer","length","all","finally","shimCreateAnswer","origCreateAnswer","createAnswer"],"mappings":"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","file":"webrtc-adapter.firefox.857077bbad644a19fd4e.js","sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window) {\n  const browserDetails = utils.detectBrowser(window);\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  // support for addIceCandidate(null or undefined)\n  // as well as ignoring {sdpMid, candidate: \"\"}\n  if (browserDetails.version < 68) {\n    const nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      if (arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params)) {\n            params.encodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(\n              sender.setParameters(params)\n              .catch(() => {})\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}"],"sourceRoot":""}
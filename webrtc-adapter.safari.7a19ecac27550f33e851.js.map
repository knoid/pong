{"version":3,"sources":["webpack:///./node_modules/webrtc-adapter/src/js/safari/safari_shim.js"],"names":["shimLocalStreamsAPI","window","RTCPeerConnection","prototype","getLocalStreams","this","_localStreams","_addTrack","addTrack","addStream","stream","includes","push","getAudioTracks","forEach","track","call","getVideoTracks","arguments","apply","removeStream","index","indexOf","splice","tracks","getTracks","getSenders","sender","removeTrack","shimRemoteStreamsAPI","getRemoteStreams","_remoteStreams","Object","defineProperty","_onaddstream","f","removeEventListener","_onaddstreampoly","addEventListener","e","streams","event","Event","dispatchEvent","origSetRemoteDescription","setRemoteDescription","pc","shimCallbacksAPI","origCreateOffer","createOffer","origCreateAnswer","createAnswer","setLocalDescription","addIceCandidate","successCallback","failureCallback","options","length","promise","then","Promise","resolve","withCallback","description","candidate","shimGetUserMedia","navigator","mediaDevices","getUserMedia","_getUserMedia","bind","constraints","shimConstraints","cb","errcb","undefined","video","assign","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","iceServers","newIceServers","i","server","hasOwnProperty","JSON","parse","stringify","urls","url","get","generateCertificate","shimTrackEventTransceiver","RTCTrackEvent","receiver","shimCreateOfferLegacy","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","find","transceiver","kind","direction","setDirection","addTransceiver","offerToReceiveVideo","videoTransceiver"],"mappings":"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","file":"webrtc-adapter.safari.7a19ecac27550f33e851.js","sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track) {\n        const stream = arguments[1];\n        if (stream) {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (!this._localStreams.includes(stream)) {\n            this._localStreams.push(stream);\n          }\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in window.RTCPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n"],"sourceRoot":""}